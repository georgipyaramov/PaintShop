@using PaintShop.Web.ViewModels;
@{
    const string ControllerName = "Products";
}
<h2>Administration Products</h2>


@(Html.Kendo()
    .Grid<SimpleProductViewModel>()
    .Name("grid")
    .Columns(cols =>
    {
        cols.Bound(pr => pr.Id).Hidden();
        cols.Bound(pr => pr.ProductIdentificator).Title("Identificator");
        cols.Bound(pr => pr.Name);
        cols.Bound(pr => pr.Category).ClientTemplate("#=Category.Name#").Title("Category");
        cols.Bound(pr => pr.ProductType).ClientTemplate("#=ProductType.Name#").Title("Type");
        cols.Bound(pr => pr.Consumtion);
        cols.Bound(pr => pr.AdjacentProducts).ClientTemplate(
             "# for (var prod in AdjacentProducts) { #" +
                "# if (AdjacentProducts[prod].Name) { #" +
                    "#=AdjacentProducts[prod].Name# " +
                "# } #" +
                //"# } else { #" +
                //"No adjacent products" +
            "# } #"
);
        cols.Bound(pr => pr.Effect).Hidden();
        cols.Command(com => com.Edit()).Title("Промяна");
        cols.Command(com => com.Destroy()).Title("Изтриване").Hidden();
        
    })
    .ColumnMenu()
    .Resizable(conf => conf.Columns(true))
    .Pageable(page => page.Refresh(true))
    .Sortable()
    .Groupable()
    .Filterable()
    .Editable(edit => edit.Mode(GridEditMode.InLine))
    .ToolBar(toolbar => toolbar.Create())
    .DataSource(data =>
        data
            .Ajax()
            .Model(m => 
                {
                    m.Id(prod => prod.Id);
                    m.Field(prod => prod.Category).DefaultValue(new SimpleCategoryViewModel());
                    m.Field(prod => prod.ProductType).DefaultValue(new SimpleProductTypeViewModel());
                    m.Field(prod => prod.AdjacentProducts).DefaultValue(new List<AdjacentProductViewModel>());
                    m.Field(prod => prod.Id).Editable(false);
                    
                })
            .Read(read => read.Action("Read", ControllerName))
            .Create(create => create.Action("Create", ControllerName))
            .Update(update => update.Action("Update", ControllerName))
            .Destroy(destroy => destroy.Action("Destroy", ControllerName))
            ))

<script>
    function filterTypes() {
        return {
            category: $("#Category").val()
        };
    }
</script>